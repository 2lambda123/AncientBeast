"use strict";(self.webpackChunkancientbeast=self.webpackChunkancientbeast||[]).push([[227],{27097:(e,t,r)=>{r.r(t),r.d(t,{default:()=>u});var i=r(19755),a=r(21094),s=r(83355),n=r(69394),c=r(67790),h=r(71956);const u=function(e){e.abilities[14]=[{trigger:"onCreatureSummon onDamage onHeal",require:function(){return!0},activate:function(){var t=this;if(!this.creature.dead){var r=this.isUpgraded()?5:7,i=Math.floor(this.creature.health/r*3),a=i==this._lastBonus;this._lastBonus=i;for(var s=["pierce","slash","crush"],n={},c=0;c<s.length;c++)n[s[c]]=i;this.creature.replaceEffect(new h.Q("Gooey Body",this.creature,this.creature,"",{alterations:n,deleteTrigger:"",stackable:!1,effectFn:function(){i!==t.lastBonus&&e.log("Effect "+t.name+" triggered")}},e)),a||e.log("%CreatureName"+this.creature.id+"% receives "+i+" pierce, slash and crush")}},_lastBonus:0},{trigger:"onQuery",require:function(){return this.testRequirements()},query:function(){var t=this,r=[[1,1],[1,1,1],[1,1]],i=this.creature.y%2!=0?-1:0,a=-1,n=[e.grid.getHexMap(this.creature.x+1+i,this.creature.y-2+a,0,!1,r),e.grid.getHexMap(this.creature.x+2+i,this.creature.y+a,0,!1,r),e.grid.getHexMap(this.creature.x+1+i,this.creature.y+2+a,0,!1,r),e.grid.getHexMap(this.creature.x-1+i,this.creature.y+2+a,0,!1,r),e.grid.getHexMap(this.creature.x-2+i,this.creature.y+a,0,!1,r),e.grid.getHexMap(this.creature.x-1+i,this.creature.y-2+a,0,!1,r)];n.sort((function(e,t){return e.length<t.length})),e.grid.queryChoice({fnOnCancel:function(){e.activeCreature.queryMove()},fnOnConfirm:function(){t.animation.apply(t,arguments)},team:s.S.Both,id:this.creature.id,requireCreature:!1,choices:n})},activate:function(t){var r=this;r.end(),e.Phaser.camera.shake(.02,333,!0,e.Phaser.camera.SHAKE_VERTICAL,!0);var n=r.getTargets(t),c=i.extend({},r.damages);if(this.isUpgraded())for(var h in c)({}).hasOwnProperty.call(c,h)&&(c[h]*=2);for(var u=0,o=0;o<n.length;o++)if(void 0!==n[o]){var f=this.damages;(0,s.H)(this.creature,n[o].target,s.S.Enemy)&&(f=c);var g=new a.h(this.creature,f,n[o].hexesHit,[],e);u+=n[o].target.takeDamage(g).kill+0}u>1&&this.creature.player.score.push({type:"combo",kills:u})}},{trigger:"onQuery",require:function(){return this.testRequirements()},query:function(){var t=this,r=this.creature,i=this.isUpgraded()?3:1,a=r.hexagons.concat(e.grid.getFlyingRange(r.x,r.y,i,r.size,r.id));e.grid.queryHexes({fnOnConfirm:function(){t.animation.apply(t,arguments)},size:r.size,flipped:r.player.flipped,id:r.id,hexes:a,ownCreatureHexShade:!0,hideNonTarget:!0})},activate:function(t){this.end();var r=this;e.Phaser.camera.shake(.01,100,!0,e.Phaser.camera.SHAKE_VERTICAL,!0);var i=function(){var i=new h.Q("Royal Seal",r.creature,t,"onStepIn",{requireFn:function(){var e=this.trap.hex.creature;return e&&e.type!==this.owner.type},effectFn:function(e,t){0===this.trap.turnLifetime&&(t.remainingMove=0,this.trap.turnLifetime=1,this.trap.ownerCreature=t)},alterations:{moveable:!1},deleteTrigger:"onStartPhase",turnLifetime:1},e);t.createTrap("royal-seal",[i],r.creature.player,{ownerCreature:r.creature,fullTurnLifetime:!0}).hide()};t.x!==this.creature.x||t.y!==this.creature.y?this.creature.moveTo(t,{callback:function(){e.activeCreature.queryMove(),i()},ignoreMovementPoint:!0,ignorePath:!0,overrideSpeed:200,animation:"push"}):i()}},{trigger:"onQuery",directions:[1,1,1,1,1,1],_targetTeam:s.S.Enemy,require:function(){return!!this.testRequirements()&&!!this.testDirection({team:this._targetTeam,directions:this.directions})},query:function(){var t=this,r=this.creature;e.grid.queryDirection({fnOnConfirm:function(){t.animation.apply(t,arguments)},flipped:r.player.flipped,team:this._targetTeam,id:this.creature.id,requireCreature:!0,x:r.x,y:r.y,directions:this.directions})},activate:function(t,r){var i=this;i.end(),e.Phaser.camera.shake(.02,300,!0,e.Phaser.camera.SHAKE_HORIZONTAL,!0);var s=c.Z$(t).creature;if(!s){var h=i.creature,u=t.map((function(e){return e.creature})).filter((function(e){return e&&e!=h}));if(0===u.length)return;s=u[0]}var o=t[0].creature===s?{sonic:20,crush:10}:{sonic:20},f=[];switch(r.direction){case 0:f=e.grid.getHexMap(s.x,s.y-8,0,s.flipped,n.pe).reverse();break;case 1:f=e.grid.getHexMap(s.x,s.y,0,s.flipped,n.hi);break;case 2:f=e.grid.getHexMap(s.x,s.y,0,s.flipped,n.m$);break;case 3:f=e.grid.getHexMap(s.x,s.y,-4,s.flipped,n.pe);break;case 4:f=e.grid.getHexMap(s.x,s.y,0,!s.flipped,n.hi);break;case 5:f=e.grid.getHexMap(s.x,s.y-8,-4,s.flipped,n.m$).reverse()}var g=f.length>1&&f[1].isWalkable(s.size,s.id,!0)&&s.stats.moveable;this.isUpgraded()&&!g&&(o.sonic+=10);var d=new a.h(i.creature,o,1,[],e);s.takeDamage(d,{ignoreRetaliation:!0}).kill||g&&s.moveTo(f[1],{ignoreMovementPoint:!0,ignorePath:!0,callback:function(){e.activeCreature.queryMove()},animation:"push"})}}]}},71956:(e,t,r)=>{r.d(t,{Q:()=>a});var i=r(18394);class a{constructor(e,t,r,i,a,s){this.effectFn=()=>{},this.requireFn=e=>!0,this.alterations={},this.turnLifetime=0,this.deleteTrigger="onStartOfRound",this.stackable=!0,this.specialHint=void 0,this.deleteOnOwnerDeath=!1,this._trap=void 0,this.attacker=void 0,this.id=s.effectId++,this.game=s,this.name=e,this.owner=t,this.target=r,this.trigger=i,this.creationTurn=s.turn;for(const e of Object.keys(a))e in this&&(this[e]=a[e]);s.effects.push(this)}animation(...e){e?this.activate(...e):this.activate()}activate(e){if(!this.requireFn(e))return!1;e instanceof i.j&&e.addEffect(this),this.effectFn(this,e)}deleteEffect(){if("effects"in this.target){const e=this.target.effects.indexOf(this);this.target.effects[e]?this.target.effects.splice(e,1):console.warn("Failed to find effect on target.",this)}const e=this.game.effects.indexOf(this);this.game.effects[e]?this.game.effects.splice(e,1):console.warn("Failed to find effect on game.",this),"updateAlteration"in this.target&&this.target.updateAlteration()}get trap(){return this._trap}set trap(e){this._trap=e}}}}]);