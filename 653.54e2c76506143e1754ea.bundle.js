"use strict";(self.webpackChunkancientbeast=self.webpackChunkancientbeast||[]).push([[653],{56653:(e,t,a)=>{a.r(t),a.d(t,{default:()=>h});var i=a(19755),r=a(16255),n=a(83355),s=a(23315),o=a(67790),c=a(71956);const h=function(e){e.abilities[44]=[{movementType:function(){return"flying"},trigger:"",require:function(){return!0},activate:function(){}},{trigger:"onQuery",_targetTeam:n.S.Enemy,require:function(){return!!this.testRequirements()&&!!this.atLeastOneTarget(this.creature.getHexMap(s.y7),{team:this._targetTeam})},query:function(){var t=this;e.grid.queryCreature({fnOnConfirm:function(){t.animation.apply(t,arguments)},team:this._targetTeam,id:this.creature.id,flipped:this.creature.flipped,hexes:this.creature.getHexMap(s.y7)})},activate:function(t){var a=this;if(a.end(),e.Phaser.camera.shake(.01,70,!0,e.Phaser.camera.SHAKE_HORIZONTAL,!0),this.isUpgraded()){var i=new c.Q("Slicing Pounce",a.creature,t,"onDamage",{alterations:{offense:-1}},e);t.addEffect(i),e.log("%CreatureName"+t.id+"%'s offense is lowered by 1")}var n=new r.h(a.creature,a.damages,1,[],e);t.takeDamage(n)}},{trigger:"onQuery",_targetTeam:n.S.Both,require:function(){if(!this.testRequirements())return!1;var e=this,t=this.creature,a=t.getHexMap(s.tE);if(a.length<2)return!1;if(a[0].creature&&a[1].creature)return!1;if(a=a.filter((function(t){return!!t.creature&&(t.creature.size<3||e.isUpgraded())})),!this.atLeastOneTarget(a,{team:this._targetTeam}))return!1;var i=a[0].creature||a[1].creature;return i.stats.moveable?!(t.remainingMove<i.size&&(this.message="Not enough movement points.",1)):(this.message="Target is not moveable.",!1)},query:function(){var t=this,a=this.creature,i=a.getHexMap(s.tE),r=i[0].creature||i[1].creature,n=Math.floor(a.remainingMove/r.size),o=a.size+r.size,c=e.grid.getHexMap(a.x-s.dU.origin[0],a.y-s.dU.origin[1],0,!1,s.dU)[0].creature==r,h=c?a.x+r.size:a.x;e.grid.queryHexes({fnOnConfirm:function(){t.animation.apply(t,arguments)},fnOnSelect:function(t){for(var i=0;i<r.hexagons.length;i++)e.grid.cleanHex(r.hexagons[i]),r.hexagons[i].displayVisualState("dashed");for(var n=0;n<a.hexagons.length;n++)e.grid.cleanHex(a.hexagons[n]),a.hexagons[n].overlayVisualState("hover h_player"+a.team);for(var s=0;s<o;s++)if(e.grid.hexExists(t.y,t.x-s)){var h,f=e.grid.hexes[t.y][t.x-s];h=c?s<r.size?r.team:a.team:s>1?r.team:a.team,e.grid.cleanHex(f),f.overlayVisualState("active creature player"+h),f.displayVisualState("creature player"+h)}},team:this._targetTeam,id:[a.id,r.id],size:o,flipped:a.player.flipped,hexes:e.grid.getFlyingRange(h,a.y,n,o,[a.id,r.id]).filter((function(e){return a.y==e.y&&(c?e.x<h:e.x>h-a.size-r.size+1)})),args:{trg:r.id,trgIsInfront:c},callbackAfterQueryHexes:function(){for(var t=0;t<r.hexagons.length;t++)e.grid.cleanHex(r.hexagons[t]),r.hexagons[t].displayVisualState("dashed")},fillHexOnHover:!1})},activate:function(t,a){var i=this;i.end(),e.Phaser.camera.shake(.01,66,!0,e.Phaser.camera.SHAKE_HORIZONTAL,!0);for(var r=this.creature,n=e.creatures[a.trg],s=a.trgIsInfront,c=e.grid.hexes[t.y][s?t.x-n.size:t.x],h=e.grid.hexes[t.y][s?t.x:t.x-r.size],f=0,g=0,u=e.grid.hexes[r.y][r.x];!f;)g++,o.NF(u.adjacentHex(g),c)&&(f=g);r.remainingMove-=f*n.size,r.moveTo(c,{animation:"fly",callback:function(){n.updateHex()},ignoreMovementPoint:!0}),n.moveTo(h,{animation:"fly",callback:function(){i.creature.updateHex(),i.creature.queryMove()},ignoreFacing:!0,ignoreMovementPoint:!0,overrideSpeed:r.animation.walk_speed})}},{trigger:"onQuery",_targetTeam:n.S.Enemy,require:function(){return!!this.testRequirements()&&!!this.atLeastOneTarget(this.creature.getHexMap(s.y7),{team:this._targetTeam})},query:function(){var t=this;e.grid.queryCreature({fnOnConfirm:function(){t.animation.apply(t,arguments)},team:this._targetTeam,id:this.creature.id,flipped:this.creature.flipped,hexes:this.creature.getHexMap(s.y7)})},activate:function(t){var a=this;a.end(),e.Phaser.camera.shake(.01,100,!0,e.Phaser.camera.SHAKE_HORIZONTAL,!0);var n=i.extend({},a.damages);this.isUpgraded()||delete n.poison;var s=new r.h(a.creature,n,1,[],e);if("Shielded"!==t.takeDamage(s).damageObj.status){var o=new c.Q(this.title,this.creature,t,"onStartPhase",{stackable:!1,effectFn:function(t,i){e.log("%CreatureName"+i.id+"% is affected by "+a.title),i.takeDamage(new r.h(t.owner,{poison:a.damages.poison},1,[],e),{isFromTrap:!0})}},e);t.replaceEffect(o),e.log("%CreatureName"+t.id+"% is poisoned by "+this.title)}}}]}},71956:(e,t,a)=>{a.d(t,{Q:()=>r});var i=a(18394);class r{constructor(e,t,a,i,r,n){this.effectFn=()=>{},this.requireFn=e=>!0,this.alterations={},this.turnLifetime=0,this.deleteTrigger="onStartOfRound",this.stackable=!0,this.specialHint=void 0,this.deleteOnOwnerDeath=!1,this.attacker=void 0,this.noLog=!1,this.id=n.effectId++,this.game=n,this.name=e,this.owner=t,this.target=a,this.trigger=i,this.creationTurn=n.turn;for(const e of Object.keys(r))e in this&&(this[e]=r[e]);n.effects.push(this)}animation(...e){e?this.activate(...e):this.activate()}activate(e){if(!this.requireFn(e))return!1;this.noLog||console.log("Effect "+this.name+" triggered"),e instanceof i.j&&e.addEffect(this),this.effectFn(this,e)}deleteEffect(){if("effects"in this.target){const e=this.target.effects.indexOf(this);this.target.effects[e]?this.target.effects.splice(e,1):console.warn("Failed to find effect on target.",this)}const e=this.game.effects.indexOf(this);this.game.effects[e]?this.game.effects.splice(e,1):console.warn("Failed to find effect on game.",this),"updateAlteration"in this.target&&this.target.updateAlteration()}}}}]);