(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{316:function(e,t,a){"use strict";a.r(t);var i=a(114),r=a(27),s=a(45),n=(a(5),a(310));t.default=function(e){e.abilities[33]=[{trigger:"onDamage onStartPhase",_damaged:!1,_targets:[],require:function(){return e.activeCreature!=this.creature?(this._damaged=!0,!1):!!this._damaged&&(this._damaged=!1,this._targets=this.creature.adjacentHexes(1),!(this.isUpgraded()&&!this.atLeastOneTarget(this._targets,{team:r.a.enemy}))&&this.testRequirements())},activate:function(){var t=this.creature,a=new i.a(t,{sonic:30},this._targets.length,[],e),r=new Set;this._targets.forEach((function(e){void 0===e.creature||r.has(e.creature)||r.add(e.creature)})),this.end(!1,!0),r.forEach((function(e,t,i){e.takeDamage(a)})),this.end(!0,!1)}},{trigger:"onQuery",_executeHealthThreshold:45,_targetTeam:r.a.enemy,require:function(){return!!this.testRequirements()&&!!this.atLeastOneTarget(this._getHexes(),{team:this._targetTeam})},query:function(){var e=this.creature,t=this;this.game.grid.queryCreature({fnOnConfirm:function(){t.animation.apply(t,arguments)},team:this._targetTeam,id:e.id,flipped:e.flipped,hexes:this._getHexes()})},activate:function(e){if(this.end(),e.health<=this._executeHealthThreshold){var t=new i.a(this.creature,{pure:e.health},1,[],this.game);this.game.UI.chat.suppressMessage(/is dead/i,1),e.takeDamage(t).kill&&(this.game.log("%CreatureName".concat(e.id,"% has been executed!")),e.hint("Executed","damage"),this.isUpgraded()&&(this.setUsed(!1),this.game.UI.selectAbility(-1)))}else{var a=new i.a(this.creature,{slash:30},1,[],this.game);e.takeDamage(a)}},_getHexes:function(){return this.creature.getHexMap(s.j)}},{trigger:"onQuery",require:function(){return this.testRequirements()},fnOnSelect:function(e){this.creature.tracePosition({x:e.x,y:e.y,overlayClass:"creature moveto selected player"+this.creature.team})},query:function(){var t=this,a=this.creature,i=e.grid.getFlyingRange(a.x,a.y,50,a.size,a.id).filter((function(e){return a.item==e.y}));e.grid.queryHexes({fnOnSelect:function(){t.fnOnSelect.apply(t,arguments)},fnOnConfirm:function(){t.animation.apply(t,arguments)},size:a.size,flipped:a.player.flipped,id:a.id,hexes:i})},activate:function(t){this.end(),this.creature.moveTo(t,{ignoreMovementPoint:!0,ignorePath:!0,callback:function(){e.activeCreature.queryMove()}}),this.creature.addEffect(new n.a("Offense++",this.creature,this.creature,"onStepIn onEndPhase",{effectFn:function(e){e.deleteEffect()},alterations:{offense:25}},e))}},{trigger:"onQuery",_targetTeam:r.a.ally,_maxTransferAmount:50,require:function(){return!!this.testRequirements()&&(this.creature.health<this._maxTransferAmount+1?(this.message="Not enough health",!1):!!this.atLeastOneTarget(this._getHexes(),{team:this._targetTeam,optTest:this._confirmTarget}))},query:function(){var t=this,a=this.creature;e.grid.queryCreature({fnOnConfirm:function(){t.animation.apply(t,arguments)},optTest:this._confirmTarget,team:this._targetTeam,id:a.id,flipped:a.flipped,hexes:this._getHexes()})},activate:function(t){this.end();var a=Math.min(t.stats.health-t.health,this._maxTransferAmount);if(t.heal(a,!1,!1),this.creature.heal(-a,!1,!1),this.game.log("%CreatureName".concat(this.creature.id,"% gives ").concat(a," health to %CreatureName").concat(t.id,"%")),this.isUpgraded()){var i=new n.a(this.title,this.creature,this.creature,"",{alterations:{regrowth:10}},e);this.creature.addEffect(i,"%CreatureName".concat(this.creature.id,"% gains 10 regrowth points"),"",!1,!0)}},_getHexes:function(){return this.creature.adjacentHexes(1)},_confirmTarget:function(e){return e.health<e.stats.health}}]}}}]);