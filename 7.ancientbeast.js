(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{316:function(e,t,a){"use strict";a.r(t);var r=a(114),i=a(27),n=(a(45),a(5),a(310));t.default=function(e){e.abilities[33]=[{trigger:"onDamage onStartPhase",_damaged:!1,_targets:[],require:function(){return e.activeCreature!=this.creature?(this._damaged=!0,!1):!!this._damaged&&(this._damaged=!1,this._targets=this.creature.adjacentHexes(1),!(this.isUpgraded()&&!this.atLeastOneTarget(this._targets,{team:i.a.enemy}))&&this.testRequirements())},activate:function(){var t=this.creature,a=new r.a(t,{sonic:30},this._targets.length,[],e),i=new Set;this._targets.forEach((function(e){void 0===e.creature||i.has(e.creature)||i.add(e.creature)})),this.end(!1,!0),i.forEach((function(e,t,r){e.takeDamage(a)})),this.end(!0,!1)}},{trigger:"onQuery",damages:{slash:40},_targetTeam:i.a.enemy,require:function(){return!!this.testRequirements()&&!!this.atLeastOneTarget(this.creature.adjacentHexes(1),{team:this._targetTeam})},query:function(){var t=this.creature,a=this;e.grid.queryCreature({fnOnConfirm:function(){a.animation.apply(a,arguments)},team:this._targetTeam,id:t.id,flipped:t.flipped,hexes:e.grid.getHexMap(t.x-2,t.y-2,0,!1,[[0,0,0,0],[0,1,0,1],[1,0,0,1],[0,1,0,1]])})},activate:function(t){this.end();var a=new r.a(this.creature,this.damages,1,[],e),i=t.takeDamage(a);""==i.status&&this.creature.addEffect(new n.a("Regrowth++",this.creature,this.creature,"onStartPhase",{effectFn:function(e){e.deleteEffect()},alterations:{regrowth:Math.round(i.damages.total/4)}},e)),this.creature.effects.forEach((function(e){"Frogger Bonus"==e.name&&this.deleteEffect()}))}},{trigger:"onQuery",require:function(){return this.testRequirements()},fnOnSelect:function(e){this.creature.tracePosition({x:e.x,y:e.y,overlayClass:"creature moveto selected player"+this.creature.team})},query:function(){var t=this,a=this.creature,r=e.grid.getFlyingRange(a.x,a.y,50,a.size,a.id).filter((function(e){return a.item==e.y}));e.grid.queryHexes({fnOnSelect:function(){t.fnOnSelect.apply(t,arguments)},fnOnConfirm:function(){t.animation.apply(t,arguments)},size:a.size,flipped:a.player.flipped,id:a.id,hexes:r})},activate:function(t){this.end(),this.creature.moveTo(t,{ignoreMovementPoint:!0,ignorePath:!0,callback:function(){e.activeCreature.queryMove()}}),this.creature.addEffect(new n.a("Offense++",this.creature,this.creature,"onStepIn onEndPhase",{effectFn:function(e){e.deleteEffect()},alterations:{offense:25}},e))}},{trigger:"onQuery",_targetTeam:i.a.ally,_maxTransferAmount:50,require:function(){return!!this.testRequirements()&&(this.creature.health<this._maxTransferAmount+1?(this.message="Not enough health",!1):!!this.atLeastOneTarget(this._getHexes(),{team:this._targetTeam,optTest:this._confirmTarget}))},query:function(){var t=this,a=this.creature;e.grid.queryCreature({fnOnConfirm:function(){t.animation.apply(t,arguments)},optTest:this._confirmTarget,team:this._targetTeam,id:a.id,flipped:a.flipped,hexes:this._getHexes()})},activate:function(t){this.end();var a=Math.min(t.stats.health-t.health,this._maxTransferAmount);if(t.heal(a,!1,!1),this.creature.heal(-a,!1,!1),this.game.log("%CreatureName".concat(this.creature.id,"% gives ").concat(a," health to %CreatureName").concat(t.id,"%")),this.isUpgraded()){var r=new n.a(this.title,this.creature,this.creature,"",{alterations:{regrowth:10}},e);this.creature.addEffect(r,"%CreatureName".concat(this.creature.id,"% gains 10 regrowth points"),"",!1,!0)}},_getHexes:function(){var t=this.creature.y%2==0?0:1;return e.grid.getHexMap(this.creature.x-t,this.creature.y-1,-2,!1,[[1,1,1,1,0],[1,0,0,0,1],[1,1,1,1,0]])},_confirmTarget:function(e){return e.health<e.stats.health}}]}}}]);