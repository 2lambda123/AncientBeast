(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{328:function(e,t,r){"use strict";r.r(t);var i=r(39),a=r.n(i),n=r(44),s=r.n(n),c=(r(0),r(114)),d=r(27),u=r(45),o=r(11),h=r(5),g=r(310);t.default=function(e){e.abilities[6]=[{trigger:"onCreatureSummon onOtherCreatureSummon onOtherCreatureDeath",_buff:0,require:function(){if(this.creature.dead||this.creature.temp)return!1;var t=0;return e.creatures.forEach((function(e){"S"!=e.realm||e.dead||e.temp||(t+=2)})),t!=this._buff&&(this._buff=t,!0)},activate:function(){this.creature.facePlayerDefault();var t=0;this.isUpgraded()&&(t=this._buff),this.creature.replaceEffect(new g.a("Lamellar Body",this.creature,this.creature,"",{alterations:{defense:this._buff,frost:this._buff,regrowth:t},stackable:!1},e))}},{trigger:"onQuery",_directions:[0,1,0,0,1,0],_targetTeam:d.a.enemy,_executeHealthThreshold:39,require:function(){if(!this.testRequirements())return!1;if(!this.atLeastOneTarget(this.creature.getHexMap(u.j),{team:this._targetTeam})){if(!this.isUpgraded())return!1;if(!this.testDirection({team:this._targetTeam,directions:this._directions,distance:this.creature.remainingMove+1,sourceCreature:this.creature}))return!1}return!0},query:function(){var t=this,r=this.creature,i=s()({fnOnConfirm:function(){t.animation.apply(t,arguments)},flipped:r.flipped,id:r.id,hexesDashed:r.getHexMap(u.j),team:d.a.enemy,requireCreature:!0},"flipped",r.flipped);if(i.choices=r.getHexMap(u.j).map((function(e){return[e]})),this.isUpgraded()){var n=e.grid.getDirectionChoices({flipped:r.flipped,sourceCreature:r,team:this._targetTeam,id:r.id,requireCreature:!0,x:r.x,y:r.y,distance:r.remainingMove+1,directions:this._directions});i.choices=i.choices.filter((function(e){return!n.choices.some((function(t){return e.every((function(e){return t.includes(e)}))}))})),i.choices=[].concat(a()(i.choices),a()(n.choices)),n.choices.forEach((function(t){var n=t[0].direction,s=1;(!r.flipped&&4===n||r.flipped&&1===n)&&(s=-1*r.size);var c=e.grid.getHexLine(r.x+s,r.y,t[0].direction,r.flipped);c.splice(0,t.length),c.splice(t.length-o.d(t).creature.size),i.hexesDashed=[].concat(a()(i.hexesDashed),a()(c))}))}e.grid.queryChoice(i)},activate:function(t,r){var i=this,a=i.creature;i.end();var n=o.d(t).creature;if(a.getHexMap(u.j).includes(o.d(t)))i._damageTarget(n);else{if(!this.isUpgraded())return;o.b(t,!1,!0,a.id);var s=o.d(t),c=s.x+(4===r.direction?a.size-1:0);s=e.grid.hexes[s.y][c];var d=1;(!a.flipped&&4===r.direction||a.flipped&&1===r.direction)&&(d=-1*a.size);var h=e.grid.getHexLine(a.x+d,a.y,r.direction,a.flipped);h.splice(0,t.length+n.size),h.splice(t.length),a.moveTo(s,{callback:function(){for(var t=null,r=0;r<h.length&&h[r].isWalkable(n.size,n.id,!0);r++)t=h[r];null!==t?n.moveTo(t,{callback:function(){t.creature===n&&i._damageTarget(n),e.activeCreature.queryMove()},ignoreMovementPoint:!0,ignorePath:!0,animation:"push"}):(i._damageTarget(n),e.activeCreature.queryMove())}})}},_damageTarget:function(t){var r=t.health<=this._executeHealthThreshold&&t.isFrozen(),i=r?{pure:t.health}:{crush:this.damages.crush,frost:this.damages.frost},a=new c.a(this.creature,i,1,[],e);r?(this.game.UI.chat.suppressMessage(/is dead/i,1),t.takeDamage(a).kill&&(this.game.log("%CreatureName".concat(t.id,"% has been shattered!")),t.hint("Shattered","damage"))):t.takeDamage(a)}},{trigger:"onQuery",_targetTeam:d.a.enemy,require:function(){if(!this.testRequirements())return!1;var t=u.q,r=u.d,i=this.creature,a=o.b(e.grid.getHexMap(i.x+2,i.y-2,0,!1,t),!0,!0,i.id,i.team).concat(o.b(e.grid.getHexMap(i.x+1,i.y-2,0,!1,r),!0,!0,i.id,i.team),o.b(e.grid.getHexMap(i.x,i.y,0,!1,t),!0,!0,i.id,i.team),o.b(e.grid.getHexMap(i.x+1,i.y,0,!1,r),!0,!0,i.id,i.team),o.b(e.grid.getHexMap(i.x+2,i.y+2,0,!1,t),!0,!0,i.id,i.team),o.b(e.grid.getHexMap(i.x-2,i.y-2,2,!0,t),!0,!0,i.id,i.team),o.b(e.grid.getHexMap(i.x-1,i.y-2,2,!0,r),!0,!0,i.id,i.team),o.b(e.grid.getHexMap(i.x,i.y,2,!0,t),!0,!0,i.id,i.team),o.b(e.grid.getHexMap(i.x-1,i.y,2,!0,r),!0,!0,i.id,i.team),o.b(e.grid.getHexMap(i.x-2,i.y+2,2,!0,t),!0,!0,i.id,i.team));return!!this.atLeastOneTarget(a,{team:this._targetTeam})},query:function(){var t=this,r=this.creature,i=[o.b(e.grid.getHexMap(r.x+2,r.y-2,0,!1,u.q),!0,!0,r.id,r.team).concat(o.b(e.grid.getHexMap(r.x+1,r.y-2,0,!1,u.d),!0,!0,r.id,r.team),o.b(e.grid.getHexMap(r.x,r.y,0,!1,u.q),!0,!0,r.id,r.team),o.b(e.grid.getHexMap(r.x+1,r.y,0,!1,u.d),!0,!0,r.id,r.team),o.b(e.grid.getHexMap(r.x+2,r.y+2,0,!1,u.q),!0,!0,r.id,r.team)),o.b(e.grid.getHexMap(r.x-2,r.y-2,2,!0,u.q),!0,!0,r.id,r.team).concat(o.b(e.grid.getHexMap(r.x-1,r.y-2,2,!0,u.d),!0,!0,r.id,r.team),o.b(e.grid.getHexMap(r.x,r.y,2,!0,u.q),!0,!0,r.id,r.team),o.b(e.grid.getHexMap(r.x-1,r.y,2,!0,u.d),!0,!0,r.id,r.team),o.b(e.grid.getHexMap(r.x-2,r.y+2,2,!0,u.q),!0,!0,r.id,r.team))];e.grid.queryChoice({fnOnConfirm:function(){t.animation.apply(t,arguments)},team:this._targetTeam,requireCreature:1,id:r.id,flipped:r.flipped,choices:i})},activate:function(t){for(var r=[],i=0;i<t.length;i++)t[i].creature instanceof h.a&&-1==r.indexOf(t[i].creature)&&(t[i].creature.takeDamage(new c.a(this.creature,this.damages1,1,[],e)),r.push(t[i].creature))}},{trigger:"onQuery",directions:[0,1,0,0,1,0],_targetTeam:d.a.enemy,require:function(){return!!this.testRequirements()&&!!this.testDirection({team:this._targetTeam,directions:this.directions,sourceCreature:this.creature})},query:function(){var t=this,r=this.creature;e.grid.queryDirection({fnOnSelect:function(r){var i=o.d(r).creature,a=t.creature.player.flipped?e.grid.hexes[o.d(r).y][o.d(r).x+i.size-1]:o.d(r);a.adjacentHex(t.radius).concat([a]).forEach((function(t){t.creature instanceof h.a?t.overlayVisualState("creature selected player"+t.creature.team):t.overlayVisualState("creature selected player"+e.activeCreature.team)}))},fnOnConfirm:function(){t.animation.apply(t,arguments)},flipped:r.player.flipped,team:this._targetTeam,id:this.creature.id,requireCreature:!0,x:r.x,y:r.y,sourceCreature:r})},activate:function(t){this.end();var r=o.d(t).creature,i=this.creature.player.flipped?e.grid.hexes[o.d(t).y][o.d(t).x+r.size-1]:o.d(t),a=this.getTargets(i.adjacentHex(this.radius).concat([i])),n=new g.a("Frozen",this.creature,void 0,"",{effectFn:function(e){e.target.stats.frozen=!0,this.deleteEffect()}},e);this.areaDamage(this.creature,this.damages,[n],a)}}]}}}]);