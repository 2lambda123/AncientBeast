"use strict";(self.webpackChunkancientbeast=self.webpackChunkancientbeast||[]).push([[795],{25795:(e,t,i)=>{i.r(t),i.d(t,{default:()=>u});var r=i(19755),a=i(21094),n=i(83355),s=i(69394),c=i(67790),o=i(71956),h=i(28646),g=i(64236);const u=e=>{e.abilities[37]=[{trigger:"onCreatureMove",require:function(t){if(!this.testRequirements())return!1;if(null==t&&(t=this.creature.hexagons[0]),this.message="",t){const i=(0,h.UI)().getTrapsAt(t.x,t.y);if(i.length>0&&i.some((e=>"mud-bath"===e.type)))return e.UI.abilitiesButtons[0].changeState("noclick"),!0}return this.message="Not in a mud bath.",this.creature.effects.forEach((function(e){"mud-bath"==e.trigger&&e.deleteEffect()})),!1},activate:function(){const t=r.extend({},this.effects[0]);if(this.isUpgraded())for(const e in t)({}).hasOwnProperty.call(t,e)&&(t[e]=2*t[e]);const i=new o.Q("Spa Goggles",this.creature,this.creature,"mud-bath",{alterations:t},e);this.creature.addEffect(i);let a,n="%CreatureName"+this.creature.id+"%'s ",s=!0;for(const e in t)({}).hasOwnProperty.call(t,e)&&(s||(n+="and "),n+=e+" ",s=!1,a=t[e]);n+="+"+a,e.log(n)}},{trigger:"onQuery",_targetTeam:n.S.Enemy,require:function(){return!!this.testRequirements()&&!!this.atLeastOneTarget(this.creature.adjacentHexes(1),{team:this._targetTeam})},query:function(){const t=this,i=this.creature;e.grid.queryDirection({fnOnConfirm:function(){t.animation(...arguments)},flipped:i.player.flipped,team:this._targetTeam,id:i.id,requireCreature:!0,x:i.x,y:i.y,sourceCreature:i,stopOnCreature:!1,distance:1})},activate:function(t,i){const r=this;r.end(),e.Phaser.camera.shake(.01,100,!0,e.Phaser.camera.SHAKE_HORIZONTAL,!0);const n=c.Z$(t).creature,s=new a.h(r.creature,r.damages,1,[],e);if(!n.takeDamage(s).kill){const t=e.grid.getHexLine(n.x,n.y,i.direction,n.flipped);t.splice(0,1);let r=null;for(let i=0;i<t.length&&t[i].isWalkable(n.size,n.id,!0)&&(r=t[i],this.isUpgraded());i++){let t=!0;for(let i=0;i<n.size;i++){const a=e.grid.hexes[r.y][r.x-i],n=(0,h.UI)().getTrapsAt(a.x,a.y);if(0===n.length||!n.some((e=>"mud-bath"===e.type))){t=!1;break}}if(!t)break}null!==r&&n.moveTo(r,{callback:function(){e.activeCreature.queryMove()},ignoreMovementPoint:!0,ignorePath:!0,overrideSpeed:800,animation:"push"})}}},{trigger:"onQuery",_targetTeam:n.S.Enemy,require:function(){if(!this.testRequirements())return!1;const t=s.IA,i=s.hi,r=this.creature,a=c.B0(e.grid.getHexMap(r.x,r.y-2,0,!1,t),!0,!0,r.id).concat(c.B0(e.grid.getHexMap(r.x,r.y,0,!1,i),!0,!0,r.id),c.B0(e.grid.getHexMap(r.x,r.y,0,!1,t),!0,!0,r.id),c.B0(e.grid.getHexMap(r.x,r.y-2,0,!0,t),!0,!0,r.id),c.B0(e.grid.getHexMap(r.x,r.y,0,!0,i),!0,!0,r.id),c.B0(e.grid.getHexMap(r.x,r.y,0,!0,t),!0,!0,r.id));return!!this.atLeastOneTarget(a,{team:this._targetTeam})},query:function(){const t=s.IA,i=s.hi,r=this,a=this.creature,n=[e.grid.getHexMap(a.x,a.y-2,0,!1,t),e.grid.getHexMap(a.x,a.y,0,!1,i),e.grid.getHexMap(a.x,a.y,0,!1,t),e.grid.getHexMap(a.x,a.y-2,0,!0,t),e.grid.getHexMap(a.x,a.y,0,!0,i),e.grid.getHexMap(a.x,a.y,0,!0,t)];n.forEach((function(e){c.B0(e,!0,!0,a.id)})),e.grid.queryChoice({fnOnConfirm:function(){r.animation(...arguments)},team:this._targetTeam,requireCreature:1,id:a.id,flipped:a.player.flipped,choices:n})},activate:function(t){const i=this;i.end(),e.Phaser.camera.shake(.01,60,!0,e.Phaser.camera.SHAKE_HORIZONTAL,!0);const r=c.Z$(t).creature;if(this.isUpgraded()){const t=new o.Q("Ground Ball",i.creature,r,"onDamage",{alterations:{meditation:-1}},e);r.addEffect(t),e.log("%CreatureName"+r.id+"%'s meditation is lowered by 1")}const n=new a.h(i.creature,i.damages,1,[],e);r.takeDamage(n)}},{trigger:"onQuery",_energyNormal:30,_energySelfUpgraded:10,require:function(){return this.isUpgraded()?(this.requirements={energy:this._energySelfUpgraded},this.costs={energy:this._energySelfUpgraded}):(this.requirements={energy:this._energyNormal},this.costs={energy:this._energyNormal}),this.testRequirements()},query:function(){const t=this,i=this.creature;let r=[];this.isUpgraded()&&this.creature.energy<this._energyNormal||(r=e.grid.getFlyingRange(i.x,i.y,50,1,0)),r.push(e.grid.hexes[i.y][i.x]),e.grid.queryHexes({fnOnCancel:function(){e.activeCreature.queryMove()},fnOnConfirm:function(){t.animation(...arguments)},hexes:r,hideNonTarget:!0})},activate:function(t){const i=this,r=this.creature,a=t.x===r.x&&t.y===r.y;this.isUpgraded()&&a?(this.requirements={energy:this._energySelfUpgraded},this.costs={energy:this._energySelfUpgraded}):(this.requirements={energy:this._energyNormal},this.costs={energy:this._energyNormal}),i.end();const n=[new o.Q("Slow Down",i.creature,t,"onStepIn",{requireFn:function(){const e=(0,h.UI)().getCreaturesAt(t.x,t.y);return 0!==e.length&&"A1"!=e[0].type},effectFn:function(e,t){t&&t.remainingMove--}},e)];new g.U(t.x,t.y,"mud-bath",n,i.creature.player,{},e),e.soundsys.playSFX("sounds/mudbath"),a&&e.onCreatureMove(r,t)}}]}},71956:(e,t,i)=>{i.d(t,{Q:()=>a});var r=i(18394);class a{constructor(e,t,i,r,a,n){this.effectFn=()=>{},this.requireFn=e=>!0,this.alterations={},this.turnLifetime=0,this.deleteTrigger="onStartOfRound",this.stackable=!0,this.specialHint=void 0,this.deleteOnOwnerDeath=!1,this._trap=void 0,this.attacker=void 0,this.id=n.effectId++,this.game=n,this.name=e,this.owner=t,this.target=i,this.trigger=r,this.creationTurn=n.turn;for(const e of Object.keys(a))e in this&&(this[e]=a[e]);n.effects.push(this)}animation(...e){e?this.activate(...e):this.activate()}activate(e){if(!this.requireFn(e))return!1;e instanceof r.j&&e.addEffect(this),this.effectFn(this,e)}deleteEffect(){if("effects"in this.target){const e=this.target.effects.indexOf(this);this.target.effects[e]?this.target.effects.splice(e,1):console.warn("Failed to find effect on target.",this)}const e=this.game.effects.indexOf(this);this.game.effects[e]?this.game.effects.splice(e,1):console.warn("Failed to find effect on game.",this),"updateAlteration"in this.target&&this.target.updateAlteration()}get trap(){return this._trap}set trap(e){this._trap=e}}}}]);